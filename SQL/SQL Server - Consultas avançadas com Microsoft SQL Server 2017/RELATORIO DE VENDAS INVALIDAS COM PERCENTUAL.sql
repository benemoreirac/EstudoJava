/*CRIAÇÃO DE RELATORIO QUE APRESENTA CLIENTES QUE TIVERAM VENDAS INVALIDAS*/


/* PASSO 1 CONSULTAR AS TABELAS E VER CAMPOS RELACIONADOS PARA RELATORIO*/
SELECT * FROM [TABELA DE CLIENTES]
SELECT * FROM [ITENS NOTAS FISCAIS]
SELECT * FROM [NOTAS FISCAIS]

/*PASSO 2 - QUERY MENOR AGRUPANDO TABELAS COM INNER PARA OBTER VALORES*/
SELECT * FROM [NOTAS FISCAIS] NF
INNER JOIN [ITENS NOTAS FISCAIS] INF ON (NF.NUMERO = INF.NUMERO)

/* PASSO 3 - TRAZER CAMPOS NECESSARIOS PARA RELATORIO */
SELECT NF.CPF, NF.DATA, INF.QUANTIDADE FROM [NOTAS FISCAIS] NF
INNER JOIN [ITENS NOTAS FISCAIS] INF ON (NF.NUMERO = INF.NUMERO)

/*CONVERT DATA PARA SUBSTRING*/
SELECT NF.CPF, SUBSTRING(CONVERT(VARCHAR, NF.DATA, 120),1,7) AS ANO_MES, INF.QUANTIDADE FROM [NOTAS FISCAIS] NF
INNER JOIN [ITENS NOTAS FISCAIS] INF ON (NF.NUMERO = INF.NUMERO)

/*AGRUPAMENTO COM AS FUNÇÕES*/
SELECT NF.CPF, SUBSTRING(CONVERT(VARCHAR, NF.DATA, 120),1,7) AS ANO_MES, SUM(INF.QUANTIDADE) AS QUANTIDADE_MES FROM [NOTAS FISCAIS] NF
INNER JOIN [ITENS NOTAS FISCAIS] INF ON (NF.NUMERO = INF.NUMERO)
GROUP BY NF.CPF, SUBSTRING(CONVERT(VARCHAR, NF.DATA, 120),1,7)

/*TRAZER NOME*/
SELECT TC.[NOME], TC.[VOLUME DE COMPRA] FROM [TABELA DE CLIENTES] TC

/*JUNTANDO QUERYS*/
SELECT 
	TC.NOME, CQ.ANO_MES, CQ.QUANTIDADE_MES, TC.[VOLUME DE COMPRA]
FROM
	(SELECT NF.CPF, SUBSTRING(CONVERT(VARCHAR, NF.DATA, 120),1,7) AS ANO_MES, SUM(INF.QUANTIDADE) AS QUANTIDADE_MES FROM [NOTAS FISCAIS] NF
	INNER JOIN [ITENS NOTAS FISCAIS] INF ON (NF.NUMERO = INF.NUMERO)
	GROUP BY NF.CPF, SUBSTRING(CONVERT(VARCHAR, NF.DATA, 120),1,7)) CQ
	INNER JOIN [TABELA DE CLIENTES] TC ON (TC.CPF = CQ.CPF)


/*COMPARANDO CONSULTA*/
SELECT 
	AUX1.NOME, AUX1.ANO_MES, AUX1.QUANTIDADE_MES,
	CASE 
		WHEN AUX1.QUANTIDADE_MES <= AUX1.[VOLUME DE COMPRA] THEN 'VENDA VALIDA'
		WHEN AUX1.QUANTIDADE_MES > AUX1.[VOLUME DE COMPRA] THEN 'VENDA INVALIDA'
	END AS STATUS_VENDA
FROM (SELECT 
	TC.NOME, CQ.ANO_MES, CQ.QUANTIDADE_MES, TC.[VOLUME DE COMPRA]
FROM
	(SELECT NF.CPF, SUBSTRING(CONVERT(VARCHAR, NF.DATA, 120),1,7) AS ANO_MES, SUM(INF.QUANTIDADE) AS QUANTIDADE_MES FROM [NOTAS FISCAIS] NF
	INNER JOIN [ITENS NOTAS FISCAIS] INF ON (NF.NUMERO = INF.NUMERO)
	GROUP BY NF.CPF, SUBSTRING(CONVERT(VARCHAR, NF.DATA, 120),1,7)) CQ
	INNER JOIN [TABELA DE CLIENTES] TC ON (TC.CPF = CQ.CPF)) AUX1
ORDER BY AUX1.NOME, AUX1.ANO_MES


/*EX1: SOMEMTES INVALIDOS*/
SELECT 
	AUX1.NOME, AUX1.ANO_MES, AUX1.QUANTIDADE_MES, AUX1.[VOLUME DE COMPRA],
	CONVERT(DECIMAL(15,2),((AUX1.QUANTIDADE_MES/AUX1.[VOLUME DE COMPRA])-1)*100),
	CASE 
		WHEN AUX1.QUANTIDADE_MES <= AUX1.[VOLUME DE COMPRA] THEN 'VENDA VALIDA'
		WHEN AUX1.QUANTIDADE_MES > AUX1.[VOLUME DE COMPRA] THEN 'VENDA INVALIDA'
	END AS STATUS_VENDA
FROM (SELECT 
	TC.NOME, CQ.ANO_MES, CQ.QUANTIDADE_MES, TC.[VOLUME DE COMPRA]
FROM
	(SELECT NF.CPF, SUBSTRING(CONVERT(VARCHAR, NF.DATA, 120),1,7) AS ANO_MES, SUM(INF.QUANTIDADE) AS QUANTIDADE_MES FROM [NOTAS FISCAIS] NF
	INNER JOIN [ITENS NOTAS FISCAIS] INF ON (NF.NUMERO = INF.NUMERO)
	GROUP BY NF.CPF, SUBSTRING(CONVERT(VARCHAR, NF.DATA, 120),1,7)) CQ
	INNER JOIN [TABELA DE CLIENTES] TC ON (TC.CPF = CQ.CPF)) AUX1
	WHERE AUX1.QUANTIDADE_MES > AUX1.[VOLUME DE COMPRA]
ORDER BY AUX1.NOME, AUX1.ANO_MES








